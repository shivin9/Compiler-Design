<program> ===> <otherFunctions> <mainFunction>
<mainFunction> ===> TK_MAIN <stmts> TK_END
<otherFunctions> ===> <function> <otherFunctions>
<otherFunctions> ===> TK_EPS
<function> ===> TK_FUNID <input_par> <output_par> TK_SEM <stmts> TK_END
<input_par> ===> TK_INPUT TK_PARAMETER TK_LIST TK_SQL <parameter_list> TK_SQR
<output_par> ===> TK_OUTPUT TK_PARAMETER TK_LIST TK_SQL <parameter_list> TK_SQR
<output_par> ===> TK_EPS
<parameter_list> ===> <dataType> TK_ID <remaining_list>
<dataType> ===> <primitiveDatatype>
<dataType> ===> <constructedDatatype>
<primitiveDatatype> ===> TK_INT
<primitiveDatatype> ===> TK_REAL
<constructedDatatype> ===> TK_RECORD TK_RECORDID
<remaining_list> ===> TK_COMMA <parameter_list>
<remaining_list> ===> TK_EPS
<stmts> ===> <typeDefinitions> <declarations> <otherStmts> <returnStmt>
<typeDefinitions> ===> <typeDefinition> <typeDefinitions>
<typeDefinitions> ===> TK_EPS
<typeDefinition> ===> TK_RECORD TK_RECORDID <fieldDefinitions> TK_ENDRECORD TK_SEM
<fieldDefinitions> ===> <fieldDefinition> <fieldDefinition> <moreFields>
<fieldDefinition> ===> TK_TYPE <primitiveDatatype> TK_COLON TK_FIELDID TK_SEM
<moreFields> ===> <fieldDefinition> <moreFields>
<moreFields> ===> TK_EPS
<declarations> ===> <declaration> <declarations>
<declarations> ===> TK_EPS
<declaration> ===> TK_TYPE <dataType> TK_COLON TK_ID <global_or_not> TK_SEM
<global_or_not> ===> TK_COLON TK_GLOBAL
<global_or_not> ===> TK_EPS
<otherStmts> ===> <stmt> <otherStmts>
<otherStmts> ===> TK_EPS
<stmt> ===> <assignmentStmt>
<stmt> ===> <iterativeStmt>
<stmt> ===> <conditionalStmt>
<stmt> ===> <ioStmt>
<stmt> ===> <funCallStmt>
<assignmentStmt> ===> <singleOrRecId> TK_ASSIGNOP <arithmeticExpression> TK_SEM
<singleOrRecId> ===> TK_ID <new_24>
<new_24> ===> TK_DOT TK_FIELDID
<new_24> ===> TK_EPS
<funCallStmt> ===> <outputParameters> TK_CALL TK_FUNID TK_WITH TK_PARAMETERS <inputParameters> TK_SEM
<outputParameters> ===> TK_SQL <idList> TK_SQR TK_ASSIGNOP
<outputParameters> ===> TK_EPS
<inputParameters> ===> TK_SQL <idList> TK_SQR
<iterativeStmt> ===> TK_WHILE TK_OP <booleanExpression> TK_CL <stmt> <otherStmts> TK_ENDWHILE
<conditionalStmt> ===> TK_IF TK_OP <booleanExpression> TK_CL TK_THEN <stmt> <otherStmts> <elsePart>
<elsePart> ===> TK_ELSE <stmt> <otherStmts> TK_ENDIF
<elsePart> ===> TK_ENDIF
<ioStmt> ===> TK_READ TK_OP <singleOrRecId> TK_CL TK_SEM
<ioStmt> ===> TK_WRITE TK_OP <allVar> TK_CL TK_SEM
<allVar> ===> <singleOrRecId>
<allVar> ===> TK_NUM
<allVar> ===> TK_RNUM
<arithmeticExpression> ===> <term> <expPrime>
<expPrime> ===> <lowPrecedenceOperators> <term> <expPrime>
<expPrime> ===> TK_EPS
<term> ===> <factor> <termPrime>
<termPrime> ===> <highPrecedenceOperators> <factor> <termPrime>
<termPrime> ===> TK_EPS
<factor> ===> TK_OP <arithmeticExpression> TK_CL
<factor> ===> <allVar>
<highPrecedenceOperators> ===> TK_MUL
<highPrecedenceOperators> ===> TK_DIV
<lowPrecedenceOperators> ===> TK_PLUS
<lowPrecedenceOperators> ===> TK_MINUS
<booleanExpression> ===> TK_OP <booleanExpression> TK_CL <logicalOp> TK_OP <booleanExpression> TK_CL
<booleanExpression> ===> <var> <relationalOp> <var>
<booleanExpression> ===> TK_NOT TK_OP <booleanExpression> TK_CL
<var> ===> TK_ID
<var> ===> TK_NUM
<var> ===> TK_RNUM
<logicalOp> ===> TK_AND
<logicalOp> ===> TK_OR
<relationalOp> ===> TK_LT
<relationalOp> ===> TK_LE
<relationalOp> ===> TK_EQ
<relationalOp> ===> TK_GT
<relationalOp> ===> TK_GE
<relationalOp> ===> TK_NE
<returnStmt> ===> TK_RETURN <optionalReturn> TK_SEM
<optionalReturn> ===> TK_SQL <idList> TK_SQR
<optionalReturn> ===> TK_EPS
<idList> ===> TK_ID <more_ids>
<more_ids> ===> TK_COMMA <idList>
<more_ids> ===> TK_EPS

FIRST SET :

{<program>} = TK_FUNID TK_MAIN
{<mainFunction>} = TK_MAIN
{<otherFunctions>} = TK_FUNID  eps
{<function>} = TK_FUNID
{<input_par>} = TK_INPUT
{<output_par>} = TK_OUTPUT  eps
{<parameter_list>} = TK_INT TK_REAL TK_RECORD
{<dataType>} = TK_INT TK_REAL TK_RECORD
{<primitiveDatatype>} = TK_INT TK_REAL
{<constructedDatatype>} = TK_RECORD
{<remaining_list>} = TK_COMMA  eps
{<stmts>} = TK_RECORD TK_TYPE TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN
{<typeDefinitions>} = TK_RECORD  eps
{<typeDefinition>} = TK_RECORD
{<fieldDefinitions>} = TK_TYPE
{<fieldDefinition>} = TK_TYPE
{<moreFields>} = TK_TYPE  eps
{<declarations>} = TK_TYPE  eps
{<declaration>} = TK_TYPE
{<global_or_not>} = TK_COLON  eps
{<otherStmts>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL  eps
{<stmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL
{<assignmentStmt>} = TK_ID
{<singleOrRecId>} = TK_ID
{<new_24>} = TK_DOT  eps
{<funCallStmt>} = TK_SQL TK_CALL
{<outputParameters>} = TK_SQL  eps
{<inputParameters>} = TK_SQL
{<iterativeStmt>} = TK_WHILE
{<conditionalStmt>} = TK_IF
{<elsePart>} = TK_ELSE TK_ENDIF
{<ioStmt>} = TK_READ TK_WRITE
{<allVar>} = TK_ID TK_NUM TK_RNUM
{<arithmeticExpression>} = TK_OP TK_ID TK_NUM TK_RNUM
{<expPrime>} = TK_PLUS TK_MINUS  eps
{<term>} = TK_OP TK_ID TK_NUM TK_RNUM
{<termPrime>} = TK_MUL TK_DIV  eps
{<factor>} = TK_OP TK_ID TK_NUM TK_RNUM
{<highPrecedenceOperators>} = TK_MUL TK_DIV
{<lowPrecedenceOperators>} = TK_PLUS TK_MINUS
{<booleanExpression>} = TK_OP TK_ID TK_NUM TK_RNUM TK_NOT
{<var>} = TK_ID TK_NUM TK_RNUM
{<logicalOp>} = TK_AND TK_OR
{<relationalOp>} = TK_LT TK_LE TK_EQ TK_GT TK_GE TK_NE
{<returnStmt>} = TK_RETURN
{<optionalReturn>} = TK_SQL  eps
{<idList>} = TK_ID
{<more_ids>} = TK_COMMA  eps

FOLLOW SET :

{<program>} = $
{<mainFunction>} = $
{<otherFunctions>} = TK_MAIN
{<function>} = TK_FUNID TK_MAIN
{<input_par>} = TK_OUTPUT TK_SEM
{<output_par>} = TK_SEM
{<parameter_list>} = TK_SQR
{<dataType>} = TK_ID TK_COLON
{<primitiveDatatype>} = TK_ID TK_COLON
{<constructedDatatype>} = TK_ID TK_COLON
{<remaining_list>} = TK_SQR
{<stmts>} = TK_END
{<typeDefinitions>} = TK_TYPE TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN
{<typeDefinition>} = TK_RECORD TK_TYPE TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN
{<fieldDefinitions>} = TK_ENDRECORD
{<fieldDefinition>} = TK_TYPE TK_ENDRECORD
{<moreFields>} = TK_ENDRECORD
{<declarations>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN
{<declaration>} = TK_TYPE TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN
{<global_or_not>} = TK_SEM
{<otherStmts>} = TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<stmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<assignmentStmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<singleOrRecId>} = TK_ASSIGNOP TK_CL TK_MUL TK_DIV TK_PLUS TK_MINUS TK_SEM
{<new_24>} = TK_ASSIGNOP TK_CL TK_MUL TK_DIV TK_PLUS TK_MINUS TK_SEM
{<funCallStmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<outputParameters>} = TK_CALL
{<inputParameters>} = TK_SEM
{<iterativeStmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<conditionalStmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<elsePart>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<ioStmt>} = TK_ID TK_WHILE TK_IF TK_READ TK_WRITE TK_SQL TK_CALL TK_RETURN TK_ENDWHILE TK_ELSE TK_ENDIF
{<allVar>} = TK_CL TK_MUL TK_DIV TK_PLUS TK_MINUS TK_SEM
{<arithmeticExpression>} = TK_SEM TK_CL
{<expPrime>} = TK_SEM TK_CL
{<term>} = TK_PLUS TK_MINUS TK_SEM TK_CL
{<termPrime>} = TK_PLUS TK_MINUS TK_SEM TK_CL
{<factor>} = TK_MUL TK_DIV TK_PLUS TK_MINUS TK_SEM TK_CL
{<highPrecedenceOperators>} = TK_OP TK_ID TK_NUM TK_RNUM
{<lowPrecedenceOperators>} = TK_OP TK_ID TK_NUM TK_RNUM
{<booleanExpression>} = TK_CL
{<var>} = TK_LT TK_LE TK_EQ TK_GT TK_GE TK_NE
{<logicalOp>} = TK_OP
{<relationalOp>} = TK_ID TK_NUM TK_RNUM
{<returnStmt>} = TK_END
{<optionalReturn>} = TK_SEM
{<idList>} = TK_SQR
{<more_ids>} = TK_SQR


